# 服务提供者配置yml文件
# 服务器配置
server:
  port: 8080

spring:
  application:
    name: sboot-provider-user # 访问服务名称
# 数据源配置
  datasource:
    url: jdbc:h2:mem:soa_service_api
    username: root
    password: root
    driver-class-name: org.h2.Driver
    schema: classpath:schema.sql
    data: classpath:data.sql
    sql-script-encoding: utf-8     #初始化数据时需设置字符集否则乱码
  jpa:
    database: h2
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: update # 开启内存加载（注：如果不开则数据不会被初始化到内存里）

# 开启h2控制台访问
  h2:
    console:
      enabled: true
      path: /h2-console

#eureka 服务注册中心配置
eureka:
  #---------------Eureka client 配置 s---------------
  client:
    #该客户端是否可用
    enabled: true
    #实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
    register-with-eureka: true
    #此客户端是否获取eureka服务器注册表上的注册信息，默认为true
    fetch-registry: true
    #实例是否使用同一zone里的eureka服务器，默认为true，理想状态下，eureka客户端与服务端是在同一zone下
    prefer-same-zone-eureka: true
    #client在shutdown的时候是否显示的注销服务从服务中心，默认为true
    should-unregister-on-shutdown: true
    # 开启eureka 客户端 健康检查 （注:必须导入 spring-boot-starter-actuator 才能加载客户端健康检查）
    healthcheck:
      enabled: true
    #与Eureka注册服务中心的通信zone和url地址
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  #---------------Eureka client 配置 e---------------

  #---------------Eureka instance 配置项 s---------------
  instance:
    #服务注册中心实例的主机名
    hostname: localhost
    #注册在Eureka服务中的应用组名
    #app-group-name: provider-eureka1
    #注册在的Eureka服务中的应用名称
    #appname: sboot-provider-user
    #该实例注册到服务中心的唯一ID
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    #该实例的IP地址
    ip-address: ${spring.cloud.client.ip-address}
    #该实例，相较于hostname是否优先使用IP
    prefer-ip-address: true
    #服务中心删除此服务实例的等待时间(秒为单位),时间间隔为最后一次服务中心接受到的心跳时间
    #该配置指示eureka服务器在接收到最后一个心跳之后等待的时间，然后才能从列表中删除此实例 (Spring Cloud默认该配置是 90s)
    lease-expiration-duration-in-seconds: 30
    #该实例给服务中心发送心跳的间隔时间，用于表明该服务实例可用
    #该配置指示eureka客户端需要向eureka服务器发送心跳的频率  (Spring Cloud默认该配置是 30s)
    lease-renewal-interval-in-seconds: 10
    #该实例，注册服务中心，默认打开的通信数量
    registry.default-open-for-traffic-count: 30
    #每分钟续约次数
    registry.expected-number-of-renews-per-min: 10
#---------------Eureka instance 配置项 e---------------

# springboot的Actuator提供了运行状态监控的功能，可以通过REST、远程Shell和JMX方式来查看。注：必须开启断路器（hystrix）
# 这个配置非常重要，否则会导致/actuator/hystrix.stream无法访问,hystrix.stream节点会持续提供熔断状态
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: ["info","health","hystrix.stream"]
      cors:
        allowed-origins: "*"
        allowed-methods: "*"

# log 日志配置
logging:
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    com.sbootLog: DEBUG