# 服务提供者配置yml文件
# 服务器配置
server:
  port: 8083
spring:
  application:
    name: sboot-provider-department # 访问服务名称
# 数据源配置
  datasource:
    #url: jdbc:h2:mem:soa_service_api
    #username: root
    #password: root
    #driver-class-name: org.h2.Driver
    schema: classpath:schema.sql
    data: classpath:data.sql
    sql-script-encoding: utf-8     #初始化数据时需设置字符集否则乱码
  jpa:
    database: h2
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: update # 开启内存加载（注：如果不开则数据不会被初始化到内存里）
# 开启h2控制台访问
  h2:
    console:
      enabled: true
      path: /h2-console
# log 日志配置
logging:
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    com.sbootLog: DEBUG

#eureka 服务注册中心配置
eureka:
#---------------Eureka client 配置 s---------------
  client:
    #该客户端是否可用
    enabled: true
    #实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true
    register-with-eureka: true
    #此客户端是否获取eureka服务器注册表上的注册信息，默认为true
    fetch-registry: true
    #client连接Eureka服务端后的空闲等待时间，默认为30 秒
    eureka-connection-idle-timeout-seconds: 30
    #client连接eureka服务端的连接超时时间，默认为5秒
    eureka-server-connect-timeout-seconds: 5
    #client对服务端的读超时时长
    eureka-server-read-timeout-seconds: 8
    #client连接all eureka服务端的总连接数，默认200
    eureka-server-total-connections: 200
    #client连接eureka服务端的单机连接数量，默认50
    eureka-server-total-connections-per-host: 50
    #执行程序指数回退刷新的相关属性，是重试延迟的最大倍数值，默认为10
    cache-refresh-executor-exponential-back-off-bound: 10
    #执行程序缓存刷新线程池的大小，默认为5
    cache-refresh-executor-thread-pool-size: 2
    #心跳执行程序回退相关的属性，是重试延迟的最大倍数值，默认为10
    heartbeat-executor-exponential-back-off-bound: 10
    #心跳执行程序线程池的大小,默认为5
    heartbeat-executor-thread-pool-size: 5
    # 询问Eureka服务url信息变化的频率（s），默认为300秒
    eureka-service-url-poll-interval-seconds: 30
    #最初复制实例信息到eureka服务器所需的时间（s），默认为40秒
    initial-instance-info-replication-interval-seconds: 40
    #间隔多长时间再次复制实例信息到eureka服务器，默认为30秒
    instance-info-replication-interval-seconds: 30
    #从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
    registry-fetch-interval-seconds: 30
    # 获取实例所在的地区。默认为us-east-1
    #region: us-east-1
    #实例是否使用同一zone里的eureka服务器，默认为true，理想状态下，eureka客户端与服务端是在同一zone下
    prefer-same-zone-eureka: true
    # 获取实例所在的地区下可用性的区域列表，用逗号隔开。（AWS）
    #availability-zones.china:
    #增量信息是否可以提供给客户端看，默认为false
    disable-delta: false
    #是否记录eureka服务器和客户端之间在注册表的信息方面的差异，默认为false
    log-delta-diff: false
    # 如果设置为true,客户端的状态更新将会点播更新到远程服务器上，默认为true
    on-demand-update-status-change: true
    #client是否在初始化阶段强行注册到服务中心，默认为false
    should-enforce-registration-at-init: false
    #client在shutdown的时候是否显示的注销服务从服务中心，默认为true
    should-unregister-on-shutdown: true
    # 开启eureka 客户端 健康检查 （注:必须导入 spring-boot-starter-actuator 才能加载客户端健康检查）
    healthcheck:
      enabled: true
    #与Eureka注册服务中心的通信zone和url地址
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
#---------------Eureka client 配置 e---------------

#---------------Eureka instance 配置项 s---------------
  instance:
    #服务注册中心实例的主机名
    hostname: localhost
    #注册在Eureka服务中的应用组名
    app-group-name: provider-eureka1
    #注册在的Eureka服务中的应用名称
    appname: sboot-provider-department
    #该实例注册到服务中心的唯一ID
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    #该实例的IP地址
    ip-address: ${spring.cloud.client.ip-address}
    #该实例，相较于hostname是否优先使用IP
    prefer-ip-address: true
    #服务中心删除此服务实例的等待时间(秒为单位),时间间隔为最后一次服务中心接受到的心跳时间
    #该配置指示eureka服务器在接收到最后一个心跳之后等待的时间，然后才能从列表中删除此实例 (Spring Cloud默认该配置是 90s)
    lease-expiration-duration-in-seconds: 5
    #该实例给服务中心发送心跳的间隔时间，用于表明该服务实例可用
    #该配置指示eureka客户端需要向eureka服务器发送心跳的频率  (Spring Cloud默认该配置是 30s)
    lease-renewal-interval-in-seconds: 1
    #该实例，注册服务中心，默认打开的通信数量
    registry.default-open-for-traffic-count: 1
    #每分钟续约次数
    registry.expected-number-of-renews-per-min: 1

#---------------开启https配置s---------------
    #https通信端口
    #secure-port: 443
    #https通信端口是否启用
    #secure-port-enabled: false
    #http通信端口
    #non-secure-port: 8080
    #http通信端口是否启用
    #non-secure-port-enabled: true
    #该实例的安全虚拟主机名称(https)
    #secure-virtual-host-nam: unknown
    #该实例的虚拟主机名称(http)
    #virtual-host-name: unknown
    #该实例的状态呈现url,绝对路径
    #status-page-url:
    #该实例的状态呈现url,相对路径
    #status-page-url-path: /status
#---------------开启https配置e---------------

#---------------健康检查路径配置 s---------------
    #该实例健康检查url,绝对路径
    #health-check-url:
    #该实例健康检查url,相对路径
    #health-check-url-path: /health
    #该实例的主页url,绝对路径
    #home-page-url:
    #该实例的主页url,相对路径
    #home-page-url-path: /
    #该实例的安全健康检查url,绝对路径
    #secure-health-check-url:
#---------------健康检查路径配置 e ------------------

#---------------用于AWS平台自动扩展的与此实例关联的组名s ---------------
    #a-s-g-name:
    #部署此实例的数据中心
    #data-center-info:
    #默认的地址解析顺序
    #default-address-resolution-order:
    #该实例的环境配置
    #environment:
    #初始化该实例，注册到服务中心的初始状态
    #initial-status: up
    #表明是否只要此实例注册到服务中心，立马就进行通信
    #instance-enabled-onit: false
    #该服务实例的命名空间,用于查找属性
    #namespace: eureka
    #该服务实例的子定义元数据，可以被服务中心接受到
    #metadata-map:
      #test: test
#---------------用于AWS平台自动扩展的与此实例关联的组名e ---------------

#---------------Eureka instance 配置项 e---------------